

class Solution {
    public int search(int[] nums, int target) {
        //Approach 1: Brute Force TC: O(n) SC:(1)
        int n = nums.length;

        for(int i=0; i<n; i++){
            if(nums[i]==target){
                return i;
            }
        }
        return -1;

        //Approach 2: Better TC:O(logn) SC:O(1)

        int n = nums.length;
        int low = 0, high = n-1;

        while(low<=high){
            int mid = (low + high) / 2;

            if(nums[mid]==target){
                return mid;
            }

            if(nums[low] <= nums[mid]){
                if(nums[low]<=target && nums[mid]>= target){
                    high = mid - 1;
                }else{
                    low = mid + 1;
                }
            }else{
                if(nums[mid]<=target && nums[high]>=target){
                    low = mid + 1;
                }else{
                    high = mid - 1;
                }
            }
        }
        return -1;
    }
}
